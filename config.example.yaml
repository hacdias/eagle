# Enables development model. That entails:
# - Request logging.
# - Template loading every request.
# - No git commit on save.
development: false

# Server configuration.
server:
  port: 8080
  # The base URL from which the website is served.
  baseUrl: "http://localhost:8080"
  # The secret to protect JWT tokens.
  tokensSecret: SecureSecret
  # Optional GitHub (https://docs.github.com/) webhook secret to update the source repository.
  webhookSecret: GitHub
  # Configure a tiles server to work at /tiles/{s}/{z}/{x}/{y}@{r}. OpenStreetMap
  # provides a free tiles server linked below.
  tilesSource: "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
  # Enable request logging.
  logging: false

# Website source directory. It is assumed to be a Git repository.
source:
  directory: /app/source

  # Assets that are compiled and minimized at runtime and can be used in the
  # templates. File path are relative to 'directory'.
  assets:
    - name: styles.css
      files:
        - css/a.css
        - css/b.css
    - name: app.js
      files:
        - js/vendor/a.min.js
        - js/b.js

# Database for indexing.
postgresql:
  user: postgres
  password: password
  host: 127.0.0.1
  port: 5432
  database: some-database

# Site configuration.
site:
  # The website language.
  language: en
  # The website title.
  title: "The Website Title"
  # The website description.
  description: "The website long description"
  # Number of items in lists.
  pagination: 10
  # Chroma theme for syntax highlighting.
  chromaTheme: code
  # The available sections at the website.
  sections:
    - home
    - articles
  # The name of the section that will be shown in the home page.
  indexSection: home
  # Definition of the menus to be used in the templates.
  menus:
    main:
      - name: Home
        link: /
  # Definition of taxonomies
  taxonomies:
    tags:               # Key is the slug of the taxonomy
      title: Tags       # Title is the capitalized title of the taxonomy
      singular: Tag     # Singular is the capitalized title of the terms of the taxonomy

# User configuration.
user:
  # The user's full name.
  name: John Doe
  # The user's username.
  username: johndoe
  # Encrypted password. Use 'eagle pwd' to generate the password.
  password: invalidSecret
  # The user's email.
  email: your@email.com
  # The user's photo.
  photo: https://example.com/beautiful.jpeg
  # Other identities the user may have.
  identities:
    - https://github.com/profile
    - https://facebook.com/profile
    - https://my.other/profile

# Syndications configuration.
syndications: {}

# Notifications configuration.
notifications:
  # Telegram (https://core.telegram.org) credentials for notifications.
  telegram:
    token: TelegramToken
    chatId: TelegramChat

# Micropub configuration.
micropub:
  # Sections to automatically add to micropub posts that do not have a section.
  # Valid types can be found in ./pkg/mf2/discovery.go.
  sections:
    article:
      - articles
      - home
    photo:
      - photos
      - home
    reply:
      - micro
  # Post types to mark as unlisted by default if not attributed to any section.
  unlisted:
    - like
  # Optional support for 'post-types' Micropub extension:
  # https://indieweb.org/Micropub-extensions#Post-Type
  postTypes:
    - type: note
      name: Note
      properties:
        - content
        - category
        - location
      required:
        - content

# Webmentions configurations.
webmentions:
  # Webmention.io (https://webmention.io) is used for incoming webmentions.
  # Not setting secret disables receiving webmentions.
  secret:

  # Disables sending webmentions.
  disableSending: true

# Optional XRay configuration.
xray:
  endpoint: https://xray.p3k.app

# Optional BunnyCDN (https://bunny.net) credentials used for the micropub
# media endpoint, for media such as 'photos', for webmentions author photos,
# and for xray author photos.
bunnycdn:
  zone: someBunnyZone
  key: someBunnySecret
  base: someBunnyBase

# Optional Miniflux (https://miniflux.app) integration for blogroll data generation.
miniflux:
  endpoint: minifluxEndpoint
  key: minifluxKey

# Optional ImgProxy (https://imgproxy.net/) integration for image resizing.
# Sizes are hardcoded for now.
imgproxy:
  # Temporary directory shared between Eagle and ImgProxy
  directory:
  # ImgProxy endpoint
  endpoint:
